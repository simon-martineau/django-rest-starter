version: "3.7"

services:
    api:
        container_name: api
        build:
            context: ./src
            dockerfile: build/prod/Dockerfile
        env_file:
          - ./instance/prod.env
        command: gunicorn django_rest_starter.wsgi:application --bind 0.0.0.0:8000
        expose:
            - 8000
        volumes:
            - static_volume:/home/app/static
            - media_volume:/home/app/media
        depends_on:
            - postgres

    postgres:
        container_name: postgres
        image: postgres:12.0-alpine
        env_file:
            - instance/prod.env
        volumes:
            - postgres_data:/var/lib/postgresql/data/

    nginx:
        build:
            context: server/prod
        restart: unless-stopped
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        container_name: nginx
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
            - static_volume:/home/app/web/static
            - media_volume:/home/app/web/media
        depends_on:
            - api

    certbot:
        image: certbot/certbot
        restart: unless-stopped
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot

volumes:
    postgres_data:
    static_volume:
    media_volume: